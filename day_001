#include<iostream>
using namespace std;

int DFS(int i, int j, int room[][100], int row, int col)
{
    if(i >= row || j >= col || room[i][j] == 0 || i < 0 || j < 0)
        return 0;
    
    int originalGold = room[i][j];
    room[i][j] = 0;

    int maxGold = 0;

    maxGold = max(max(DFS(i+1, j, room, row, col), DFS(i-1, j, room, row, col)), max(DFS(i, j+1, room, row, col), DFS(i, j-1, room, row, col)));

    room[i][j] = originalGold;
    return originalGold + maxGold;
}

int main()
{
    int row;
    int col;

    cout<<"enter the number of rows and column : ";
    cin>>row>>col;

    int room[100][100];
    int maxGold = INT32_MIN;

    cout<<"Enter the Gold "<<endl;
    for(int i = 0; i < row; i++)
    {
        for(int j = 0; j < col; j++)
        {
            cin>>room[i][j];
        }
    }


    //Start

    
    for(int i = 0; i < row; i++)
    {
        for(int j = 0; j < col; j++)
        {
            maxGold = max(maxGold, DFS(i, j, room, row, col));
        }
    }

    cout<<maxGold;
    return 0;
}
